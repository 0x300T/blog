""" Install the dot files """

from __future__ import print_function

import os
import sys

if sys.version_info.major == 2:
    from urllib import urlretrieve
else:
    from urllib.request import urlretrieve

THIS_DIR = os.path.abspath(os.path.dirname(__file__))

def mkdir_p(path):
    if not os.path.exists(path):
        os.makedirs(path)

def create_symlink_if_missing(src, dest):
    if os.path.exists(src):
        print("Skipping", src)
        return
    dirname = os.path.dirname(src)
    mkdir_p(dirname)
    print(src, "->", dest)
    os.symlink(dest, src)

def write_file_if_missing(path, contents):
    if os.path.exists(path):
        print("Skipping", path)
        return
    print("Creating", path)
    dirname = os.path.dirname(path)
    mkdir_p(dirname)
    with open(path, "w") as fp:
        fp.write(contents)

def zsh_install_pure_prompt():
    """ Install zsh pure prompt from my own fork """
    # All we have to do is copy to files from the repo
    # to ~/.local/share/zsh/functions/ with the correct name
    zsh_functions_dir = os.path.expanduser("~/.local/share/zsh/functions/")
    mkdir_p(zsh_functions_dir)
    base_url = "https://raw.githubusercontent.com/dmerejkowsky/zsh-pure-prompt"
    base_url += "/master"
    todo = [("pure.zsh", "prompt_pure_setup"),
            ("async.zsh", "async")]
    for (src, dest) in todo:
        url = os.path.join(base_url, src)
        full_dest = os.path.join(zsh_functions_dir, dest)
        print("Retrieving", full_dest)
        urlretrieve(url, full_dest)

def main():
    mkdir_p(os.path.expanduser("~/.local/bin"))
    mkdir_p(os.path.expanduser("~/.config"))

    # .gitconfig
    gitconfig_dir = os.path.expanduser("~/.config/git")
    gitconfig = os.path.join(gitconfig_dir, "config")
    write_file_if_missing(gitconfig, """\
# Autogenerated. Do not edit
[core]
excludesfile = {0}/gitexcludes

[include]
path = {0}/gitconfig
path = {1}/config.local
""" .format(THIS_DIR, gitconfig_dir))

    # .zsh
    zshrc = os.path.expanduser("~/.zshrc")
    zshrc_local = zshrc + ".local"
    write_file_if_missing(zshrc, """\
# Auto-generated. Do not edit
source {0}/zshrc
if [ -f "${{HOME}}/.zshrc.local" ] ; then
  source "${{HOME}}/.zshrc.local"
fi
""".format(THIS_DIR))

    zsh_install_pure_prompt()

    # conky
    src = os.path.expanduser("~/.config/conky/conky.conf")
    dest = os.path.join(THIS_DIR, "conky.conf")
    if sys.platform.startswith("linux"):
        create_symlink_if_missing(src, dest)

    # screen
    src = os.path.expanduser("~/.screenrc")
    dest = os.path.join(THIS_DIR, "screenrc")
    create_symlink_if_missing(src, dest)

    # i3
    src = os.path.expanduser("~/.config/i3/config")
    dest = os.path.join(THIS_DIR, "i3")
    create_symlink_if_missing(src, dest)

    # tint2
    src = os.path.expanduser("~/.config/tint2/tint2rc")
    dest = os.path.join(THIS_DIR, "tint2rc")
    create_symlink_if_missing(src, dest)

    # openbox
    src = os.path.expanduser("~/.config/openbox")
    dest = os.path.join(THIS_DIR, "openbox")
    create_symlink_if_missing(src, dest)


if __name__ == "__main__":
    main()
