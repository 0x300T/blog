#!/usr/bin/env python

import argparse
import shutil
import subprocess
import sys

import path
import neovim


def print_line():
    term_size = shutil.get_terminal_size()
    print("-" * term_size.columns)
    print()


def sanitize_url(url):
    as_path = path.Path(url)
    if as_path.exists():
        url = "file://" + as_path.abspath()
    return url


def loop(*, url, cmd, browser=None):
    vim = neovim.attach("socket", path="/tmp/neovim")
    vim.subscribe("refresh")
    vim.command('nnoremap ,m :w<cr>:call rpcnotify(0, "refresh")<cr>')
    print("Ready to roll")
    driver = None
    if url:
        from selenium import webdriver
        if browser == "chrome":
            driver = webdriver.Chrome()
        else:
            driver = webdriver.Firefox()
        driver.get(url)
    while True:
        try:
            vim.next_message()
            if cmd:
                print(cmd)
                process = subprocess.run(cmd, shell=True)
                if process.returncode != 0:
                    print("Process failed")
            if driver:
                driver.refresh()
            print_line()
        except neovim.api.NvimError:
            sys.exit(e)
        except OSError as e:
            if e.args[0] == "EOF":
                sys.exit("Neovim connection lost")


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--browser", choices=["chrome", "firefox"])
    parser.add_argument("--cmd")
    parser.add_argument("--url")
    args = parser.parse_args()
    cmd = args.cmd
    url = args.url
    browser = args.browser
    if browser and not url:
        sys.exit("--browser used but no url set")
    if url:
        url = sanitize_url(url)
    loop(url=url, cmd=cmd, browser=browser)


if __name__ == "__main__":
    main()
