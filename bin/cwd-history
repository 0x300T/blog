#!/usr/bin/env python3

import argparse
import os
import subprocess


def get_db_path():
    zsh_share_path = os.path.expanduser("~/.local/share/zsh")
    os.makedirs(zsh_share_path, exist_ok=True)
    db_path = os.path.join(zsh_share_path, "cwd_history")
    return db_path


def read_db():
    db_path = get_db_path()
    if os.path.exists(db_path):
        with open(db_path, "r") as fp:
            return [x.strip() for x in fp.readlines()]
    else:
        return list()


def write_db(paths):
    db_path = get_db_path()
    with open(db_path, "w") as fp:
        fp.writelines(sorted(x + "\n" for x in paths))


def add_to_db(path):
    paths = read_db()
    if path not in paths:
        paths.append(path)
        write_db(paths)


def remove_from_db(path):
    paths = read_db()
    if path in paths:
        paths.remove(path)
        write_db(paths)


def list_db():
    paths = read_db()
    print("\n".join(paths))


def edit_db():
    paths = read_db()
    db_path = get_db_path()
    cmd = ["vim", db_path]
    subprocess.call(cmd)


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("action", choices=["add", "remove", "list", "edit"])
    parser.add_argument("path", nargs="?")

    args = parser.parse_args()
    path = args.path
    action = args.action

    if action == "add":
        add_to_db(path)
    elif action == "remove":
        remove_from_db(path)
    elif action == "list":
        list_db()
    elif action == "edit":
        edit_db()


if __name__ == "__main__":
    main()
